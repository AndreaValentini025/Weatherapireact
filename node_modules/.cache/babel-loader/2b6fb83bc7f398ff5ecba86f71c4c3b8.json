{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\weather\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\weather\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var key, url, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                key = \"df496e977a8eaf0022cfe8705b872eb3\";\n                if (!_this.state.inputCountry.equals('')) _this.state.inputCountry = ',this.state.inputCountry';\n                url = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(_this.state.input).concat(_this.state.inputCountry, \"&units=metric&appid=\").concat(key);\n                _context.next = 6;\n                return fetch(url);\n\n              case 6:\n                api_call = _context.sent;\n                _context.next = 9;\n                return api_call.json();\n\n              case 9:\n                data = _context.sent;\n                console.log(data);\n\n                _this.setState({\n                  input: '',\n                  inputCountry: ''\n                });\n\n                _this.setState({\n                  city: data.name,\n                  country: data.sys.country,\n                  temp: data.main.temp,\n                  pressure: data.main.pressure,\n                  humidity: data.main.humidity,\n                  wind: data.wind.speed,\n                  weather: data.weather[0].description,\n                  image: data.weather[0].icon,\n                  image_url: \"https://openweathermap.org/img/w/\" + data.weather[0].icon + \".png\"\n                });\n\n                document.getElementsByClassName(\"output\")[0].style.visibility = \"visible\";\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onChange2 = function (event) {\n      _this.setState({\n        inputCountry: event.target.value\n      });\n    };\n\n    _this.state = {\n      input: '',\n      inputCountry: '',\n      city: '',\n      country: '',\n      temp: 0,\n      pressure: 0,\n      wind: 0,\n      weather: '',\n      humidity: 0,\n      image: '',\n      image_url: ''\n    };\n    return _this;\n  } //https://openweathermap.org/img/w/{this.state.icon}.png\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input\",\n        style: {\n          margin: \"0 auto\",\n          height: 220,\n          width: 210\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Weather Forecast\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        value: this.state.input,\n        name: \"Inserisci la localit\\xE0\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"country\",\n        type: \"text\",\n        value: this.state.inputCountry,\n        name: \"Inserisci lo stato\",\n        onChange: this.onChange2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: \"30px\",\n          display: \"block\",\n          width: 210\n        },\n        onClick: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"div\", {\n        className: \"output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.city, \",\", this.state.country), React.createElement(\"img\", {\n        style: {\n          float: \"left\"\n        },\n        id: \"meteo\",\n        src: this.state.image_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.temp, \" \\xB0C\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.weather), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Vento: \", this.state.wind, \" m/s\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Pressione: \", this.state.pressure, \" HPA\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Umidit\\xE0: \", this.state.humidity, \" %\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\andre\\Desktop\\React\\weather\\src\\App.js"],"names":["React","Component","App","props","getWeather","e","preventDefault","key","state","inputCountry","equals","url","input","fetch","api_call","json","data","console","log","setState","city","name","country","sys","temp","main","pressure","humidity","wind","speed","weather","description","image","icon","image_url","document","getElementsByClassName","style","visibility","onChange","event","target","value","onChange2","margin","height","width","marginTop","display","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\nconstructor(props){\n  super(props);\n  \n\n  this.state={\n    input:'',\n    inputCountry:'',\n    city:'',\n    country:'',\n    temp:0,\n    pressure:0,\n    wind:0,\n    weather:'',\n    humidity:0,\n    image:'',\n    image_url:''\n  }\n\n}\n//https://openweathermap.org/img/w/{this.state.icon}.png\ngetWeather = async(e) => {\n  e.preventDefault();\n  const key=\"df496e977a8eaf0022cfe8705b872eb3\";\n  if(!this.state.inputCountry.equals(''))\n    this.state.inputCountry=',this.state.inputCountry';\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.input}${this.state.inputCountry}&units=metric&appid=${key}`;\n  const api_call= await fetch(url);\n  const data = await api_call.json();\n  console.log(data);\n  this.setState({input:'',inputCountry:''});\n  this.setState({city:data.name,\n    country:data.sys.country,\n    temp:data.main.temp,\n    pressure:data.main.pressure,\n    humidity:data.main.humidity,\n    wind:data.wind.speed,\n    weather:data.weather[0].description,\n    image:data.weather[0].icon,\n    image_url:\"https://openweathermap.org/img/w/\"+data.weather[0].icon+\".png\"\n\n  })\n  document.getElementsByClassName(\"output\")[0].style.visibility=\"visible\";\n}\n  \n\n\n\nonChange = (event) => {\n    this.setState({ input: event.target.value });\n    \n  }\n  onChange2 = (event) => {\n    this.setState({ inputCountry: event.target.value }); \n  }\n\n  render() {\n    return (\n      <div id=\"main\">\n        <div className=\"input\" style={{margin: \"0 auto\",height: 220,width: 210}}>\n          <form>\n            <p id=\"title\">Weather Forecast</p>\n            <br/>\n            <input id=\"city\" type=\"text\" value={this.state.input} name=\"Inserisci la località\" onChange={this.onChange}/>\n            <input id=\"country\" type=\"text\" value={this.state.inputCountry} name=\"Inserisci lo stato\" onChange={this.onChange2}/>\n            <button type=\"submit\" style={{marginTop: \"30px\",display: \"block\",width: 210}} onClick={this.getWeather}>Submit</button>\n          </form>\n        </div>\n      \n        <div className=\"output\">\n          <h1>{this.state.city},{this.state.country}</h1>\n          <img style={{float:\"left\"}} id=\"meteo\" src={this.state.image_url}/>\n          <h3 >{this.state.temp} °C</h3>\n          <br/>\n          <p>{this.state.weather}</p>\n          <p>Vento: {this.state.wind} m/s</p>\n          <p>Pressione: {this.state.pressure} HPA</p>\n          <p>Umidità: {this.state.humidity} %</p>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}